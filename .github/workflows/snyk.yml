name: CI
on:
  push:
    branches:
      - develop
      - 'release/**'
      - main
  pull_request:
    branches:
      - develop
      - 'release/**'
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: snyk/actions/node@master
        continue-on-error: true
        with:
          args: --fail-on=upgradable --severity-threshold=critical
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - run: npm ci
      - run: echo npm run docker:start:db
      - run: sleep 5
      - name: Create env file
        run: |
          touch .env
          echo MONGODB_URI=$MONGODB_URI >> .env
          echo JWT_KEYS_URI=$JWT_KEYS_URI >> .env
          echo JWT_VERIFY_AUD=$JWT_VERIFY_AUD >> .env
          echo JWT_VERIFY_ISS=$JWT_VERIFY_ISS >> .env
          echo REDIS_PASSWORD=$REDIS_PASSWORD >> .env
          echo APIFILESTORAGE_BUCKET_NAME >> .env
          echo AUTH0_DOMAIN=$AUTH0_DOMAIN >> .env
          echo AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID >> .env
          echo AUTH0_CLIENT_SECRET=$AUTH0_CLIENT_SECRET >> .env
          echo AUTH0_API_AUDIENCE=$AUTH0_API_AUDIENCE >> .env
          echo SENTRY_DSN=$SENTRY_DSN >> .env
          echo NOVU_API_KEY=$NOVU_API_KEY >> .env
      - run: echo npm run docker:test
      
  # test:
  #   runs-on: ubuntu-latest
  #   needs: install
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #     - run: echo npm run docker:test

  # scan:
  #   runs-on: ubuntu-latest
  #   needs: install
  #   permissions:
  #     actions: read
  #     contents: read
  #     # statuses: read
  #     # security-events: write
  #   steps:
  #     # - uses: actions/checkout@master
  #     # - name: Generate Sarif File
  #     #   uses: snyk/actions/node@master
  #     #   continue-on-error: true # To make sure that SARIF upload gets called
  #     #   env:
  #     #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #     #   with:
  #     #     args: --sarif-file-output=snyk.sarif --severity-threshold=critical
  #     # - name: Upload Sarif File to GitHub Code Scanning
  #     #   uses: github/codeql-action/upload-sarif@v3
  #     #   with:
  #     #     sarif_file: snyk.sarif
  #     - name: Monitor vulnerabilities with Snyk
  #       uses: snyk/actions/node@master
  #       continue-on-error: true # Don't break CI for now
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --fail-on=upgradable --severity-threshold=critical

  release-to-production:
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    needs: 
      - test
      - scan
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # environment:
    #   name: production
    #   url: https://api.triniti.net
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      # - uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: arn:aws:iam::698823889544:role/GithubActionsDeploy
      #     role-session-name: github-deploy
      #     aws-region: ap-southeast-2
      - name: Install AWS Copilot
        run: echo deploy to production
